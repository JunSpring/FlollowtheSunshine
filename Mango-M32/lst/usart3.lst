
C:\ride_project\FlollowtheSunshine\obj\usart3.o:     file format elf32-littlearm
C:\ride_project\FlollowtheSunshine\obj\usart3.o

Disassembly of section .text.__io_putchar:

00000000 <__io_putchar>:
__io_putchar():
C:\ride_project\FlollowtheSunshine\src/usart3.c:40
}


#ifdef __GNUC__
int __io_putchar(int ch)
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
C:\ride_project\FlollowtheSunshine\src/usart3.c:42
    // Transmit Data 
    USART_SendData(USART3, (uint8_t)ch);
   4:	b2e1      	uxtb	r1, r4
   6:	4805      	ldr	r0, [pc, #20]	(1c <__io_putchar+0x1c>)
   8:	f7ff fffe 	bl	0 <USART_SendData>
C:\ride_project\FlollowtheSunshine\src/usart3.c:43
    while (USART_GetFlagStatus(USART3, USART_FLAG_TXE) == RESET)
   c:	4803      	ldr	r0, [pc, #12]	(1c <__io_putchar+0x1c>)
   e:	2180      	movs	r1, #128
  10:	f7ff fffe 	bl	0 <USART_GetFlagStatus>
  14:	2800      	cmp	r0, #0
  16:	d0f9      	beq.n	c <USART_GetFlagStatus+0xc>
C:\ride_project\FlollowtheSunshine\src/usart3.c:47
    {
    }
    return ch;
}
  18:	4620      	mov	r0, r4
  1a:	bd10      	pop	{r4, pc}
  1c:	40004800 	.word	0x40004800
Disassembly of section .text.initUSART3:

00000000 <initUSART3>:
initUSART3():
C:\ride_project\FlollowtheSunshine\src/usart3.c:4
#include "usart3.h"

void initUSART3(USART3_config* config, GPIO_TypeDef* port, uint16_t txPin, uint16_t rxPin, uint32_t baudRate)
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\ride_project\FlollowtheSunshine\src/usart3.c:5
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
   2:	2008      	movs	r0, #8
C:\ride_project\FlollowtheSunshine\src/usart3.c:4
#include "usart3.h"

void initUSART3(USART3_config* config, GPIO_TypeDef* port, uint16_t txPin, uint16_t rxPin, uint32_t baudRate)
{
   4:	b086      	sub	sp, #24
   6:	460d      	mov	r5, r1
C:\ride_project\FlollowtheSunshine\src/usart3.c:5
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
   8:	2101      	movs	r1, #1
C:\ride_project\FlollowtheSunshine\src/usart3.c:4
#include "usart3.h"

void initUSART3(USART3_config* config, GPIO_TypeDef* port, uint16_t txPin, uint16_t rxPin, uint32_t baudRate)
{
   a:	4614      	mov	r4, r2
   c:	461e      	mov	r6, r3
C:\ride_project\FlollowtheSunshine\src/usart3.c:5
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
   e:	f7ff fffe 	bl	0 <RCC_APB2PeriphClockCmd>
C:\ride_project\FlollowtheSunshine\src/usart3.c:6
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
  12:	2101      	movs	r1, #1
  14:	f44f 2080 	mov.w	r0, #262144	; 0x40000
  18:	f7ff fffe 	bl	0 <RCC_APB1PeriphClockCmd>
C:\ride_project\FlollowtheSunshine\src/usart3.c:11

    GPIO_InitTypeDef GPIO_InitStructure;

    // Configure USARTx_Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = txPin;
  1c:	f8ad 4014 	strh.w	r4, [sp, #20]
C:\ride_project\FlollowtheSunshine\src/usart3.c:12
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  20:	2303      	movs	r3, #3
C:\ride_project\FlollowtheSunshine\src/usart3.c:14
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(port, &GPIO_InitStructure);
  22:	ac05      	add	r4, sp, #20
C:\ride_project\FlollowtheSunshine\src/usart3.c:12

    GPIO_InitTypeDef GPIO_InitStructure;

    // Configure USARTx_Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = txPin;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  24:	f88d 3016 	strb.w	r3, [sp, #22]
C:\ride_project\FlollowtheSunshine\src/usart3.c:14
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(port, &GPIO_InitStructure);
  28:	4628      	mov	r0, r5
C:\ride_project\FlollowtheSunshine\src/usart3.c:13
    GPIO_InitTypeDef GPIO_InitStructure;

    // Configure USARTx_Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = txPin;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  2a:	3315      	adds	r3, #21
C:\ride_project\FlollowtheSunshine\src/usart3.c:14
    GPIO_Init(port, &GPIO_InitStructure);
  2c:	4621      	mov	r1, r4
C:\ride_project\FlollowtheSunshine\src/usart3.c:13
    GPIO_InitTypeDef GPIO_InitStructure;

    // Configure USARTx_Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = txPin;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  2e:	f88d 3017 	strb.w	r3, [sp, #23]
C:\ride_project\FlollowtheSunshine\src/usart3.c:14
    GPIO_Init(port, &GPIO_InitStructure);
  32:	f7ff fffe 	bl	0 <GPIO_Init>
C:\ride_project\FlollowtheSunshine\src/usart3.c:18

    // Configure USARTx_Rx as input floating
    GPIO_InitStructure.GPIO_Pin = rxPin;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  36:	2304      	movs	r3, #4
C:\ride_project\FlollowtheSunshine\src/usart3.c:19
    GPIO_Init(port, &GPIO_InitStructure);
  38:	4628      	mov	r0, r5
  3a:	4621      	mov	r1, r4
C:\ride_project\FlollowtheSunshine\src/usart3.c:18
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(port, &GPIO_InitStructure);

    // Configure USARTx_Rx as input floating
    GPIO_InitStructure.GPIO_Pin = rxPin;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  3c:	f88d 3017 	strb.w	r3, [sp, #23]
C:\ride_project\FlollowtheSunshine\src/usart3.c:17
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(port, &GPIO_InitStructure);

    // Configure USARTx_Rx as input floating
    GPIO_InitStructure.GPIO_Pin = rxPin;
  40:	f8ad 6014 	strh.w	r6, [sp, #20]
C:\ride_project\FlollowtheSunshine\src/usart3.c:19
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(port, &GPIO_InitStructure);
  44:	f7ff fffe 	bl	0 <GPIO_Init>
C:\ride_project\FlollowtheSunshine\src/usart3.c:23

    USART_InitTypeDef USART_InitStructure;

    USART_InitStructure.USART_BaudRate = baudRate;
  48:	9b0a      	ldr	r3, [sp, #40]
C:\ride_project\FlollowtheSunshine\src/usart3.c:31
    USART_InitStructure.USART_Parity = USART_Parity_No;
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;

    /* Configure the USARTx */
    USART_Init(USART3, &USART_InitStructure);
  4a:	4c0c      	ldr	r4, [pc, #48]	(7c <initUSART3+0x7c>)
C:\ride_project\FlollowtheSunshine\src/usart3.c:23
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(port, &GPIO_InitStructure);

    USART_InitTypeDef USART_InitStructure;

    USART_InitStructure.USART_BaudRate = baudRate;
  4c:	9301      	str	r3, [sp, #4]
C:\ride_project\FlollowtheSunshine\src/usart3.c:24
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
  4e:	2300      	movs	r3, #0
  50:	f8ad 3008 	strh.w	r3, [sp, #8]
C:\ride_project\FlollowtheSunshine\src/usart3.c:25
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
  54:	f8ad 300a 	strh.w	r3, [sp, #10]
C:\ride_project\FlollowtheSunshine\src/usart3.c:26
    USART_InitStructure.USART_Parity = USART_Parity_No;
  58:	f8ad 300c 	strh.w	r3, [sp, #12]
C:\ride_project\FlollowtheSunshine\src/usart3.c:27
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
  5c:	f8ad 3010 	strh.w	r3, [sp, #16]
C:\ride_project\FlollowtheSunshine\src/usart3.c:31
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;

    /* Configure the USARTx */
    USART_Init(USART3, &USART_InitStructure);
  60:	4620      	mov	r0, r4
C:\ride_project\FlollowtheSunshine\src/usart3.c:28
    USART_InitStructure.USART_BaudRate = baudRate;
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
    USART_InitStructure.USART_Parity = USART_Parity_No;
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
  62:	f04f 030c 	mov.w	r3, #12	; 0xc
C:\ride_project\FlollowtheSunshine\src/usart3.c:31

    /* Configure the USARTx */
    USART_Init(USART3, &USART_InitStructure);
  66:	a901      	add	r1, sp, #4
C:\ride_project\FlollowtheSunshine\src/usart3.c:28
    USART_InitStructure.USART_BaudRate = baudRate;
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
    USART_InitStructure.USART_Parity = USART_Parity_No;
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
  68:	f8ad 300e 	strh.w	r3, [sp, #14]
C:\ride_project\FlollowtheSunshine\src/usart3.c:31

    /* Configure the USARTx */
    USART_Init(USART3, &USART_InitStructure);
  6c:	f7ff fffe 	bl	0 <USART_Init>
C:\ride_project\FlollowtheSunshine\src/usart3.c:34

    /* Enable the USART1 */
    USART_Cmd(USART3, ENABLE);
  70:	4620      	mov	r0, r4
  72:	2101      	movs	r1, #1
  74:	f7ff fffe 	bl	0 <USART_Cmd>
C:\ride_project\FlollowtheSunshine\src/usart3.c:35
}
  78:	b006      	add	sp, #24
  7a:	bd70      	pop	{r4, r5, r6, pc}
  7c:	40004800 	.word	0x40004800
