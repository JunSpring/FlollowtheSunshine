
C:\ride_project\FlollowtheSunshine\Mango-M32\obj\cds_sensor.o:     file format elf32-littlearm
C:\ride_project\FlollowtheSunshine\Mango-M32\obj\cds_sensor.o

Disassembly of section .text.readCDSValue:

00000000 <readCDSValue>:
readCDSValue():
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:43
    while (ADC_GetCalibrationStatus(cds->adc))
        ;
}

uint16_t readCDSValue(CDS* cds)
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:44
    ADC_SoftwareStartConvCmd(cds->adc, ENABLE);
   2:	2101      	movs	r1, #1
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:43
    while (ADC_GetCalibrationStatus(cds->adc))
        ;
}

uint16_t readCDSValue(CDS* cds)
{
   4:	4605      	mov	r5, r0
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:44
    ADC_SoftwareStartConvCmd(cds->adc, ENABLE);
   6:	6880      	ldr	r0, [r0, #8]
   8:	f7ff fffe 	bl	0 <ADC_SoftwareStartConvCmd>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:45
    while (ADC_GetFlagStatus(cds->adc, ADC_FLAG_EOC) == RESET)
   c:	68a8      	ldr	r0, [r5, #8]
   e:	2102      	movs	r1, #2
  10:	f7ff fffe 	bl	0 <ADC_GetFlagStatus>
  14:	2800      	cmp	r0, #0
  16:	d0f9      	beq.n	c <readCDSValue+0xc>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:47
        ;
    uint16_t cdsValue = ADC_GetConversionValue(cds->adc);
  18:	68a8      	ldr	r0, [r5, #8]
  1a:	f7ff fffe 	bl	0 <ADC_GetConversionValue>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:48
    ADC_SoftwareStartConvCmd(cds->adc, DISABLE);
  1e:	2100      	movs	r1, #0
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:47
uint16_t readCDSValue(CDS* cds)
{
    ADC_SoftwareStartConvCmd(cds->adc, ENABLE);
    while (ADC_GetFlagStatus(cds->adc, ADC_FLAG_EOC) == RESET)
        ;
    uint16_t cdsValue = ADC_GetConversionValue(cds->adc);
  20:	4604      	mov	r4, r0
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:48
    ADC_SoftwareStartConvCmd(cds->adc, DISABLE);
  22:	68a8      	ldr	r0, [r5, #8]
  24:	f7ff fffe 	bl	0 <ADC_SoftwareStartConvCmd>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:51

    return cdsValue;
}
  28:	4620      	mov	r0, r4
  2a:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.initCDSSensor:

00000000 <initCDSSensor>:
initCDSSensor():
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:4
#include "cds_sensor.h"

void initCDSSensor(CDS* cds)
{
   0:	b530      	push	{r4, r5, lr}
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:8
    ADC_InitTypeDef ADC_InitStructure;
    GPIO_InitTypeDef GPIO_InitStructure;

    if (cds->adc == ADC1) {
   2:	6882      	ldr	r2, [r0, #8]
   4:	4b25      	ldr	r3, [pc, #148]	(9c <initCDSSensor+0x9c>)
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:4
#include "cds_sensor.h"

void initCDSSensor(CDS* cds)
{
   6:	b087      	sub	sp, #28
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:8
    ADC_InitTypeDef ADC_InitStructure;
    GPIO_InitTypeDef GPIO_InitStructure;

    if (cds->adc == ADC1) {
   8:	429a      	cmp	r2, r3
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:4
#include "cds_sensor.h"

void initCDSSensor(CDS* cds)
{
   a:	4605      	mov	r5, r0
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:8
    ADC_InitTypeDef ADC_InitStructure;
    GPIO_InitTypeDef GPIO_InitStructure;

    if (cds->adc == ADC1) {
   c:	d102      	bne.n	14 <initCDSSensor+0x14>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:9
        RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);
   e:	f44f 7000 	mov.w	r0, #512	; 0x200
  12:	e00a      	b.n	2a <initCDSSensor+0x2a>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:11
    }
    else if (cds->adc == ADC2) {
  14:	4b22      	ldr	r3, [pc, #136]	(a0 <initCDSSensor+0xa0>)
  16:	429a      	cmp	r2, r3
  18:	d102      	bne.n	20 <initCDSSensor+0x20>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:12
        RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC2, ENABLE);
  1a:	f44f 6080 	mov.w	r0, #1024	; 0x400
  1e:	e004      	b.n	2a <initCDSSensor+0x2a>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:14
    }
    else if (cds->adc == ADC3) {
  20:	4b20      	ldr	r3, [pc, #128]	(a4 <initCDSSensor+0xa4>)
  22:	429a      	cmp	r2, r3
  24:	d104      	bne.n	30 <initCDSSensor+0x30>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:15
        RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC3, ENABLE);
  26:	f44f 4000 	mov.w	r0, #32768	; 0x8000
  2a:	2101      	movs	r1, #1
  2c:	f7ff fffe 	bl	0 <RCC_APB2PeriphClockCmd>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:18
    }

    GPIO_InitStructure.GPIO_Pin = cds->pin;
  30:	88ab      	ldrh	r3, [r5, #4]
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:19
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  32:	2400      	movs	r4, #0
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:20
    GPIO_Init(cds->port, &GPIO_InitStructure);
  34:	6828      	ldr	r0, [r5, #0]
  36:	a905      	add	r1, sp, #20
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:18
    }
    else if (cds->adc == ADC3) {
        RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC3, ENABLE);
    }

    GPIO_InitStructure.GPIO_Pin = cds->pin;
  38:	f8ad 3014 	strh.w	r3, [sp, #20]
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:19
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  3c:	f88d 4017 	strb.w	r4, [sp, #23]
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:20
    GPIO_Init(cds->port, &GPIO_InitStructure);
  40:	f7ff fffe 	bl	0 <GPIO_Init>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:25

    ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
    ADC_InitStructure.ADC_ScanConvMode = DISABLE;
    ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
  44:	f44f 2360 	mov.w	r3, #917504	; 0xe0000
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:22

    GPIO_InitStructure.GPIO_Pin = cds->pin;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
    GPIO_Init(cds->port, &GPIO_InitStructure);

    ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
  48:	9400      	str	r4, [sp, #0]
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:23
    ADC_InitStructure.ADC_ScanConvMode = DISABLE;
  4a:	f88d 4004 	strb.w	r4, [sp, #4]
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:24
    ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
  4e:	f88d 4005 	strb.w	r4, [sp, #5]
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:26
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
  52:	9403      	str	r4, [sp, #12]
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:28
    ADC_InitStructure.ADC_NbrOfChannel = 1;
    ADC_Init(cds->adc, &ADC_InitStructure);
  54:	68a8      	ldr	r0, [r5, #8]
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:27
    ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
    ADC_InitStructure.ADC_ScanConvMode = DISABLE;
    ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
    ADC_InitStructure.ADC_NbrOfChannel = 1;
  56:	3401      	adds	r4, #1
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:28
    ADC_Init(cds->adc, &ADC_InitStructure);
  58:	4669      	mov	r1, sp
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:25
    GPIO_Init(cds->port, &GPIO_InitStructure);

    ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
    ADC_InitStructure.ADC_ScanConvMode = DISABLE;
    ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
  5a:	9302      	str	r3, [sp, #8]
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:27
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
    ADC_InitStructure.ADC_NbrOfChannel = 1;
  5c:	f88d 4010 	strb.w	r4, [sp, #16]
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:28
    ADC_Init(cds->adc, &ADC_InitStructure);
  60:	f7ff fffe 	bl	0 <ADC_Init>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:30

    ADC_RegularChannelConfig(cds->adc, cds->channel, 1, ADC_SampleTime_55Cycles5);
  64:	68a8      	ldr	r0, [r5, #8]
  66:	7b29      	ldrb	r1, [r5, #12]
  68:	4622      	mov	r2, r4
  6a:	2305      	movs	r3, #5
  6c:	f7ff fffe 	bl	0 <ADC_RegularChannelConfig>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:32

    ADC_Cmd(cds->adc, ENABLE);
  70:	68a8      	ldr	r0, [r5, #8]
  72:	4621      	mov	r1, r4
  74:	f7ff fffe 	bl	0 <ADC_Cmd>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:34

    ADC_ResetCalibration(cds->adc);
  78:	68a8      	ldr	r0, [r5, #8]
  7a:	f7ff fffe 	bl	0 <ADC_ResetCalibration>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:35
    while (ADC_GetResetCalibrationStatus(cds->adc))
  7e:	68a8      	ldr	r0, [r5, #8]
  80:	f7ff fffe 	bl	0 <ADC_GetResetCalibrationStatus>
  84:	2800      	cmp	r0, #0
  86:	d1fa      	bne.n	7e <initCDSSensor+0x7e>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:37
        ;
    ADC_StartCalibration(cds->adc);
  88:	68a8      	ldr	r0, [r5, #8]
  8a:	f7ff fffe 	bl	0 <ADC_StartCalibration>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:38
    while (ADC_GetCalibrationStatus(cds->adc))
  8e:	68a8      	ldr	r0, [r5, #8]
  90:	f7ff fffe 	bl	0 <ADC_GetCalibrationStatus>
  94:	2800      	cmp	r0, #0
  96:	d1fa      	bne.n	8e <ADC_GetCalibrationStatus+0x8e>
C:\ride_project\FlollowtheSunshine\Mango-M32\src/cds_sensor.c:40
        ;
}
  98:	b007      	add	sp, #28
  9a:	bd30      	pop	{r4, r5, pc}
  9c:	40012400 	.word	0x40012400
  a0:	40012800 	.word	0x40012800
  a4:	40013c00 	.word	0x40013c00
